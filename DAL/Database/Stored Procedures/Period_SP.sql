USE ProUTN;
GO

--to get last code
CREATE PROCEDURE SP_GETNEXTCODEPERIOD
AS
BEGIN
	SELECT MAX(PERIOD_ID) FROM PERIOD;
END;
GO

--to check that a period exists
CREATE PROCEDURE SP_EXISTSPERIOD
@CODE NUMERIC
AS
BEGIN
	SELECT COUNT(PERIOD_ID) FROM PERIOD WHERE PERIOD_ID = @CODE;
END;
go

--to insert a period
CREATE PROCEDURE SP_INSERTPERIOD
	@CODE NUMERIC,
	@NAME VARCHAR(50),
	@STARTDATE DATETIME,
	@FINALDATE DATETIME,
	@MODALITY VARCHAR(15),
	@STATE NUMERIC(1)
AS 
BEGIN
	INSERT INTO PERIOD(PERIOD_ID,NAME,STARTDATE,FINALDATE,MODALITY,STATE,DELETED)
	VALUES(@CODE,@NAME,@STARTDATE,@FINALDATE,@MODALITY,@STATE, 1)
END;
GO

--to modify period
CREATE PROCEDURE SP_MODIFYPERIOD
@CODE NUMERIC,
@NAME VARCHAR(50),
@STARTDATE DATETIME,
@FINALDATE DATETIME,
@MODALITY VARCHAR(15),
@STATE NUMERIC(1)
AS 
BEGIN
	UPDATE PERIOD
	SET NAME = @NAME,
	FINALDATE = @FINALDATE,
	STARTDATE = @STARTDATE,
	MODALITY = @MODALITY,
	STATE = @STATE
	WHERE PERIOD_ID = @CODE; 
END;
GO

--to delete period
CREATE PROCEDURE SP_DELETEPERIOD
@ID NUMERIC
AS
BEGIN
	UPDATE PERIOD
	SET DELETED = 0
	WHERE PERIOD_ID = @ID;
END;
GO 	

--to get all period
CREATE PROCEDURE SP_GETALLPERIOD
AS
BEGIN
	SELECT PERIOD.PERIOD_ID,NAME,STARTDATE,FINALDATE,PERIODTYPE.DESCRIPTION,PERIOD.STATE
	FROM PERIOD,PERIODTYPE
	WHERE PERIOD.MODALITY = PERIODTYPE.PERIODTYPE_ID AND 
	PERIOD.DELETED = 1;
END;
GO

--to get a period by code
CREATE PROCEDURE SP_GETPERIOD
@CODE NUMERIC
AS
BEGIN
	SELECT PERIOD_ID,NAME,STARTDATE,FINALDATE,MODALITY,STATE
	FROM PERIOD 
	WHERE PERIOD_ID = @CODE AND
	DELETED = 1;
END;
GO

--to get all period active
CREATE PROCEDURE SP_GETALLPERIODACTIVE
AS
BEGIN
	SELECT PERIOD.PERIOD_ID,NAME,STARTDATE,FINALDATE,PERIODTYPE.DESCRIPTION,PERIOD.STATE
	FROM PERIOD,PERIODTYPE
	WHERE PERIOD.MODALITY = PERIODTYPE.PERIODTYPE_ID 
	AND PERIOD.STATE=1 AND
	PERIOD.DELETED = 1;
END;
GO

--to get last period
CREATE PROCEDURE SP_GET_LAST_PERIOD
AS
BEGIN
	SELECT MAX(PERIOD_ID)
	FROM PERIOD
END

--end period procedures
