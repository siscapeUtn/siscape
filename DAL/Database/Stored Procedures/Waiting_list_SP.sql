USE ProUTN;
GO

--TO GET LAST CODE
CREATE PROCEDURE SP_GETNEXTCODEWAITINGLIST
AS
BEGIN
	SELECT MAX(WAITING_LIST_ID) 
	FROM WAITING_LIST;
END;
GO

--TO GET LAST CODE TENTATIVE_SHCEDULE
CREATE PROCEDURE SP_GET_NEXT_CODE_TENTATIVE_SHCEDULE
AS
BEGIN
	SELECT MAX(TENTATIVE_SHEDULE_ID) 
	FROM TENTATIVE_SCHEDULE;
END;
GO


--TO INSERT A CUSTOMER
--Drop proc SP_INSERT_WAITINGLIST
CREATE PROCEDURE SP_INSERT_WAITINGLIST
	@WAITING_LIST_ID NUMERIC,
	@ID VARCHAR(15),
	@NAME VARCHAR(50),
	@SURNAME VARCHAR(50),
	@PHONE VARCHAR(15),
	@CELLPHONE VARCHAR(15),
	@MAIL VARCHAR(100),
	@OFFER NUMERIC,
	@CONTACTED NUMERIC(1)
AS
BEGIN
	INSERT INTO WAITING_LIST(WAITING_LIST_ID, ID, NAME, SURNAME, PHONE, CELLPHONE, MAIL,ACADEMIC_OFFER_ID, CONTACTED)
	VALUES( @WAITING_LIST_ID, @ID, @NAME, @SURNAME, @PHONE, @CELLPHONE, @MAIL,@OFFER, @CONTACTED );
END;
GO

 
--TO MODIFY WAITING_LIST_
CREATE PROCEDURE SP_MODIFY_WAITING_LIST
	@WAITING_LIST_ID NUMERIC,
	@CONTACTED NUMERIC(1)
AS 
BEGIN
	UPDATE WAITING_LIST 
	SET CONTACTED = @CONTACTED 
	WHERE WAITING_LIST_ID = @WAITING_LIST_ID
END;
GO


--TO GET ALL CUSTOMER FROM WAITING LIST UNCONTACTED
--DROP PROC SP_GET_ALL_CUSTOMER_BY_PERIOD
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_BY_PERIOD
@PERIOD NUMERIC
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL,P.NAME, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C, PERIOD P
	WHERE AO.PERIOD_ID = @PERIOD AND C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID AND AO.PERIOD_ID = P.PERIOD_ID
	ORDER BY CONTACTED,ID ASC;
END;
GO
--execute SP_GET_ALL_CUSTOMER_BY_PERIOD 2

--TO GET ALL CUSTOMER FROM WAITING LIST CONTACTED
--DROP PROC SP_GET_ALL_CUSTOMER_2
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_2
@PERIOD NUMERIC
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL,P.NAME, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C, PERIOD P
	WHERE AO.PERIOD_ID = @PERIOD AND C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID AND AO.PERIOD_ID = P.PERIOD_ID
	ORDER BY CONTACTED DESC;
END;
GO

-- execute SP_GET_ALL_CUSTOMER_2 0
	
--TO GET ALL CUSTOMER FROM WAITING LIST BY COURS
--DROP PROC SP_GET_ALL_CUSTOMER_BY_COURSE
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_BY_COURSE
@PERIOD NUMERIC
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL,P.NAME, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C, PERIOD P
	WHERE AO.PERIOD_ID = @PERIOD AND C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID AND AO.PERIOD_ID = P.PERIOD_ID
	ORDER BY C.COURSE_ID,ID ASC;
END;
GO


--TO GET ALL CUSTOMER CONTACTED FROM WAITING LIST 
--DROP PROC SP_GET_ALL_CUSTOMER_WT
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_WT
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C
	WHERE C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID
	ORDER BY CONTACTED,ID ASC;
END;
GO

--TO GET ALL CUSTOMER NOT CONTACTED FROM WAITING LIST 
--DROP PROC SP_GET_ALL_CUSTOMER_WT_UNCONNTACTED
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_WT_UNCONNTACTED
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C
	WHERE C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID
	ORDER BY CONTACTED DESC;
END;
GO


--TO GET ALL CUSTOMER FROM WAITING LIST BY COURSE
--DROP PROC SP_GET_ALL_CUSTOMER_WT_BY_COURSE
CREATE PROCEDURE SP_GET_ALL_CUSTOMER_WT_BY_COURSE
AS
BEGIN
	SELECT WT.WAITING_LIST_ID AS CODE, WT.ID, CONCAT(WT.NAME,' ',WT.SURNAME) AS NAMEC,PHONE,CELLPHONE,MAIL, C.DESCRIPTION,CONTACTED
	FROM WAITING_LIST WT, ACADEMIC_OFFER AO, COURSE C
	WHERE C.COURSE_ID = AO.COURSE_ID AND WT.ACADEMIC_OFFER_ID = AO.ACADEMIC_OFFER_ID
	ORDER BY C.COURSE_ID,ID ASC;
END;
GO



