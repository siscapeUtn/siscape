USE ProUTN;
GO
/* ---- Store Procedures TEACHER_SCHEDULE ---- */
--to get last code
CREATE PROCEDURE SP_GETNEXTCODETEACHER_SCHEDULE
AS
BEGIN
	SELECT MAX(TEACHER_SCHEDULE_ID) 
	FROM TEACHER_SCHEDULE;
END;
GO

--to insert a CLASSROOM_SCHEDULE
--drop procedure SP_INSERT_TEACHER_SCHEDULE
CREATE PROCEDURE SP_INSERT_TEACHER_SCHEDULE
@TEACHER_SCHEDULE_ID NUMERIC,
@TEACHER_ID NUMERIC,
@PERIOD_ID NUMERIC,
@DIA_ID NUMERIC,
@Course_ID NUMERIC,
@INITIAL_HOUR TIME,
@FINAL_HOUR TIME,
@ACADEMICOFFER_ID   NUMERIC
AS
BEGIN

INSERT INTO [dbo].[TEACHER_SCHEDULE]
           ([TEACHER_SCHEDULE_ID],[TEACHER_ID],[PERIOD_ID],[DAY_ID]
           ,[Course_ID],[INITIAL_HOUR],[FINAL_HOUR],[STATE],[ACADEMIC_OFFER_ID])
     VALUES
           (@TEACHER_SCHEDULE_ID,@TEACHER_ID,@PERIOD_ID,@DIA_ID,@Course_ID,@INITIAL_HOUR,@FINAL_HOUR,1,@ACADEMICOFFER_ID)

END;
GO


--drop procedure SP_TEACHER_BY_SCHEDULE
create procedure SP_TEACHER_BY_SCHEDULE
@period numeric,
@inicialHour time,
@finalhour time,
@day1 numeric,
@day2 numeric,
@day3 numeric,
@day4 numeric,
@day5 numeric,
@day6 numeric,
@day7 numeric
as
begin 

   SELECT T.[TEACHER_ID],T.[NAME],T.[SURNAME],T.[PHONE],T.[CELEPHONE],T.[MAIL],T.[POSITION_ID],ID.DESCRIPTION
   FROM TEACHER T,INTERNAL_DESIGNATION ID
   WHERE T.POSITION_ID=ID.DESIGNATION_ID and T.STATE=1
   AND T.TEACHER_ID not in(SELECT T.TEACHER_ID FROM TEACHER T, TEACHER_SCHEDULE TS
   WHERE T.TEACHER_ID=TS.TEACHER_ID AND TS.PERIOD_ID=@period AND (TS.DAY_ID=@day1 or TS.DAY_ID=@day2 or TS.DAY_ID=@day3 or TS.DAY_ID=@day4 or TS.DAY_ID=@day5 or TS.DAY_ID=@day6 or TS.DAY_ID=@day7
   AND TS.INITIAL_HOUR>@finalhour and TS.FINAL_HOUR<@inicialHour))
end;
GO