USE ProUTN;
GO
/* ---- Store Procedures Role ---- */
--to get last code
CREATE PROCEDURE SP_GETNEXTCODEROLE
AS
BEGIN
	SELECT MAX(ROLE_ID) 
	FROM ROLE;
END;
GO

--to check that a ROLE exists
CREATE PROCEDURE SP_EXISTROLE
@ID NUMERIC
AS
BEGIN
	SELECT COUNT(ROLE_ID) 
	FROM ROLE 
	WHERE ROLE_ID =@ID;
END;
GO

--to check that a ROLE whit diferent name
--drop procedure SP_EXISTROLENAME
CREATE PROCEDURE SP_EXISTROLENAME
@DESCRIPTION VARCHAR(30)
AS
BEGIN
	SELECT COUNT(ROLE_ID) 
	FROM ROLE 
	WHERE DESCRIPTION =@DESCRIPTION and DELETED=1;
END;
GO

--to insert a Role
CREATE PROCEDURE SP_INSERTROLE
@ID NUMERIC,
@NAME VARCHAR(30),
@STATE NUMERIC(1)
AS
BEGIN
	INSERT INTO ROLE (ROLE_ID,DESCRIPTION,STATE,DELETED) 
	VALUES (@ID,@NAME,@STATE,1);
END;
GO

--to modify a Role
CREATE PROCEDURE SP_MODIFYROLE
@ID NUMERIC,
@NAME VARCHAR(50),
@STATE NUMERIC(1)
AS 
BEGIN
	UPDATE ROLE
	SET DESCRIPTION = @NAME,
	STATE = @STATE
	WHERE ROLE_ID = @ID; 
END;
GO
--DROP PROCEDURE SP_GETALLROLE
CREATE PROCEDURE SP_GETALLROLE
AS
BEGIN
	SELECT R.ROLE_ID,R.DESCRIPTION,R.STATE
	FROM ROLE R
	WHERE R.DELETED=1
END;
GO

CREATE PROCEDURE SP_GETROLE
@ID NUMERIC
AS
BEGIN
	SELECT R.ROLE_ID,R.DESCRIPTION,R.STATE
	FROM ROLE R
	WHERE R.ROLE_ID=@ID AND R.DELETED=1
END;
GO

-- to delete role
CREATE PROCEDURE SP_DELETEROLE
@ID NUMERIC
AS
BEGIN
	UPDATE ROLE
	SET DELETED = 0
	WHERE ROLE_ID = @ID;
END;
GO

