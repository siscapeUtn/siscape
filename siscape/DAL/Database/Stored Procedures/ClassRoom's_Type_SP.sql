USE ProUTN;
GO
/* ---- Store Procedures ClassRoom's Type ---- */
--to get last code
CREATE PROCEDURE SP_GETNEXTCODECLASSROOMSTYPE
AS
BEGIN
	SELECT MAX(CLASSROOMSTYPE_ID)
	FROM CLASSROOMSTYPE;
END;
GO

--to check that a classroom's type exists
CREATE PROCEDURE SP_EXISTCLASSROOMSTYPE
@ID NUMERIC
AS
BEGIN
	SELECT COUNT(CLASSROOMSTYPE_ID)
	FROM CLASSROOMSTYPE
	WHERE CLASSROOMSTYPE_ID = @ID;
END;
GO

--to insert a classroom's type
CREATE PROCEDURE SP_INSERTCLASSROOMSTYPE
@ID NUMERIC,
@DESCRIPTION VARCHAR(70),
@STATE NUMERIC(1)  
AS
BEGIN
	INSERT INTO CLASSROOMSTYPE (CLASSROOMSTYPE_ID, DESCRIPTION, STATE, DELETED)
	VALUES (@ID, @DESCRIPTION, @STATE, 1);
END;
GO

--to modify classroom's type
CREATE PROCEDURE SP_MODIFYCLASSROOMSTYPE
@ID NUMERIC,
@DESCRIPTION VARCHAR(70),
@STATE NUMERIC(1)  
AS
BEGIN
	UPDATE CLASSROOMSTYPE
	SET DESCRIPTION = @DESCRIPTION,
	STATE = @STATE
	WHERE CLASSROOMSTYPE_ID = @ID;
END;
GO 

-- to delete classroom's type
CREATE PROCEDURE SP_DELETECLASSROOMTYPE
@ID NUMERIC
AS
BEGIN
	UPDATE CLASSROOMSTYPE
	SET DELETED = 0
	WHERE CLASSROOMSTYPE_ID = @ID;
END;
GO

--to get all classroom's type
CREATE PROCEDURE SP_GETALLCLASSROOMSTYPE
AS
BEGIN
	SELECT CLASSROOMSTYPE_ID, DESCRIPTION, STATE
	FROM CLASSROOMSTYPE
	WHERE DELETED = 1;
END;
GO

--to get classroom's type by code
CREATE PROCEDURE SP_GETCLASSROOMSTYPE
@ID NUMERIC
AS
BEGIN
	SELECT CLASSROOMSTYPE_ID, DESCRIPTION, STATE
	FROM CLASSROOMSTYPE
	WHERE CLASSROOMSTYPE_ID = @ID  AND 
	DELETED = 1;
END;
GO

--to get all classroom's type active
CREATE PROCEDURE SP_GETALLCLASSROOMACTIVESTYPE
AS
BEGIN
	SELECT CLASSROOMSTYPE_ID, DESCRIPTION, STATE
	FROM CLASSROOMSTYPE
	WHERE STATE = 1 AND
	DELETED = 1;
END;
GO

--to get all classroom's type desactive
CREATE PROCEDURE SP_GETALLCLASSROOMDESACTIVESTYPE
AS
BEGIN
	SELECT CLASSROOMSTYPE_ID, DESCRIPTION, STATE
	FROM CLASSROOMSTYPE
	WHERE STATE = 0 AND
	DELETED = 1;
END;
GO

/* ---- End Classroom's Type Procedures ---- */