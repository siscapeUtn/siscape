USE ProUTN;
GO

--to get last code
CREATE PROCEDURE SP_GETNEXTCODEFUNCTIONARY
AS
BEGIN
	SELECT MAX(FUNCTIONARY_ID) 
	FROM FUNCTIONARY;
END;
GO

--to insert a functionary
CREATE PROCEDURE SP_INSERTFUNCTIONARY
	@FUNCTIONARY_ID NUMERIC,
	@ID VARCHAR(15),
	@NAME VARCHAR(50),
	@SURNAME VARCHAR(50),
	@PHONE VARCHAR(15),
	@CELLPHONE VARCHAR(15),
	@MAIL VARCHAR(100),
	@STATE NUMERIC(1)
AS 
BEGIN
	INSERT INTO FUNCTIONARY(FUNCTIONARY_ID, ID, NAME, SURNAME, PHONE, CELLPHONE, MAIL, STATE, DELETED)
	VALUES( @FUNCTIONARY_ID, @ID, @NAME, @SURNAME, @PHONE, @CELLPHONE, @MAIL, @STATE, 1 );
END;
GO

--to modify functionary
CREATE PROCEDURE SP_MODIFYFUNCTIONARY
	@FUNCTIONARY_ID NUMERIC,
	@ID VARCHAR(15),
	@NAME VARCHAR(50),
	@SURNAME VARCHAR(50),
	@PHONE VARCHAR(15),
	@CELLPHONE VARCHAR(15),
	@MAIL VARCHAR(100),
	@STATE NUMERIC(1)
AS 
BEGIN
	UPDATE FUNCTIONARY
	SET ID = @ID,
	NAME = @NAME,
	SURNAME = @SURNAME,
	PHONE = @PHONE,
	CELLPHONE = @CELLPHONE,
	MAIL = @MAIL,
	STATE = @STATE
	WHERE FUNCTIONARY_ID = @FUNCTIONARY_ID; 
END;
GO

-- to delete a Functionary
CREATE PROCEDURE SP_DELETEFUNCTIONARY
	@FUNCTIONARY_ID NUMERIC
AS
BEGIN
	UPDATE FUNCTIONARY
	SET DELETED = 0
	WHERE FUNCTIONARY_ID = @FUNCTIONARY_ID;
END;
GO

--to get all functionary	
CREATE PROCEDURE SP_GETALLFUNCTIONARY
AS
BEGIN
	SELECT FUNCTIONARY_ID, ID, NAME,SURNAME,PHONE,CELLPHONE,MAIL,STATE 
	FROM FUNCTIONARY 
	WHERE DELETED = 1;
END;
GO

--to get all functionary active
CREATE PROCEDURE SP_GETALLFUNCTIONARYACTIVED
AS
BEGIN
	SELECT FUNCTIONARY_ID, ID, NAME, SURNAME, PHONE, CELLPHONE, MAIL, STATE 
	FROM FUNCTIONARY 
	WHERE STATE = 1 AND
	DELETED = 1;
END;
GO

--to get all functionary desactive
CREATE PROCEDURE SP_GETALLFUNCTIONARYDESACTIVED
AS
BEGIN
	SELECT FUNCTIONARY_ID, ID, NAME, SURNAME, PHONE, CELLPHONE, MAIL, STATE 
	FROM FUNCTIONARY 
	WHERE STATE = 0 AND
	DELETED = 1;
END;
GO

--to get a functionary by code
CREATE PROCEDURE SP_GETFUNCTIONARY
@CODE NUMERIC
AS
BEGIN
	SELECT FUNCTIONARY_ID, ID, NAME, SURNAME, PHONE, CELLPHONE, MAIL, STATE, DELETED
	FROM FUNCTIONARY 
	WHERE FUNCTIONARY_ID = @CODE AND
	DELETED = 1
END;
GO

--to check that a functionary exists
CREATE PROCEDURE SP_EXISTSFUNCTIONARY
@CODE NUMERIC
AS
BEGIN
	SELECT COUNT(FUNCTIONARY_ID) FROM FUNCTIONARY 
	WHERE FUNCTIONARY_ID =@CODE;
END;

-- end FUNCTIONARY procedures





